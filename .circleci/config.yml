version: 2

jobs:

  test:
    docker:
      - image: rust:latest
    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-cargo-cache-test-{{ arch }}-{{ .Branch }}
            - v3-cargo-cache-test-{{ arch }}

      # Install nightly & wasm
      - run:
          name: Install Rust nightly
          command: rustup update nightly && rustup default nightly
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown

      # Install wasm tools
      - run:
          name: Install wasm-pack
          command: >
            curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      # Show versions
      - run:
          name: Show versions
          command: rustc --version && cargo --version && wasm-pack --version

      # Run tests
      - run:
          name: Run all tests
          command: cargo test --all

      # Save cache
      - save_cache:
          key: v3-cargo-cache-test-{{ arch }}-{{ .Branch }}
          paths:
            - target
            - /usr/local/cargo
      - save_cache:
          key: v3-cargo-cache-test-{{ arch }}
          paths:
            - target
            - /usr/local/cargo

  site-build:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-cargo-cache-site-{{ arch }}-{{ .Branch }}
            - v3-cargo-cache-site-{{ arch }}

      # Install nightly
      - run:
          name: Install Rust nightly
          command: rustup update nightly && rustup default nightly

      # Show versions
      - run:
          name: Show versions
          command: rustc --version && cargo --version

       # Install wasm tools
      - run:
          name: Install wasm-pack
          command: >
            curl -L https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1/wasm-pack-v0.9.1-x86_64-unknown-linux-musl.tar.gz
            | tar --strip-components=1 --wildcards -xzf - "*/wasm-pack"
            && chmod +x wasm-pack
            && mv wasm-pack $CARGO_HOME/bin/

      # Install mdbook
      - run:
          name: Install mdbook
          command: >
            (test -x $CARGO_HOME/bin/cargo-install-update || cargo install cargo-update)
            && (test -x $CARGO_HOME/bin/mdbook || cargo install --vers "^0.4" mdbook)
            && mv ~/.gitconfig ~/.gitconfig.disabled  # Workaround for https://github.com/nabijaczleweli/cargo-update/issues/100
            && cargo install-update -a
            && mv ~/.gitconfig.disabled ~/.gitconfig

      # Build Site
      - run:
          name: Build Site
          command: >
            (cd book && mdbook build)
            && cargo doc --no-deps -p psd
            && cp -R target/doc book/book/api
            && (cd examples/drag-drop-browser && ./build-release.sh)
            && cp -R examples/drag-drop-browser/public book/book/drag-drop-demo
            && rm book/book/drag-drop-demo/.gitignore
            && sed -i -e 's/drag_drop_browser/psd\/drag-drop-demo\/drag_drop_browser/g' book/book/drag-drop-demo/index.html # Fix script path
            && sed -i -e 's/app.css/psd\/drag-drop-demo\/app.css/g' book/book/drag-drop-demo/index.html # Fix script path

      - persist_to_workspace:
          root: book
          paths: book

      # Save cache
      - save_cache:
          key: v3-cargo-cache-site-{{ arch }}-{{ .Branch }}
          paths:
            - target
            - /usr/local/cargo
      - save_cache:
          key: v3-cargo-cache-site-{{ arch }}
          paths:
            - target
            - /usr/local/cargo

  site-deploy:
    docker:
      - image: node:10
    steps:
      - checkout
      - attach_workspace:
          at: book
      - run:
          name: Disable jekyll builds
          command: touch book/book/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci-build@klukas.net"
            git config user.name "ci-build"

      - add_ssh_keys:
          fingerprints:
            - "74:9d:18:d2:11:b2:15:39:9f:d3:77:84:10:cd:f9:c1"
      - run:
          name: Deploy site to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist book/book

workflows:
  version: 2
  build:
    jobs:
      - test
      - site-build
      - site-deploy:
          requires:
            - site-build
          filters:
            branches:
              only: master
